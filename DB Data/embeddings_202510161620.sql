INSERT INTO public.embeddings (document_id,embedding,chunk_text,chunk_index) VALUES
	 (15,'[-0.07662148,0.047607202,-0.06129527,-0.092434525,-0.02899625,-0.10992919,-0.044487257,-0.04683169,-0.022140872,-0.010902673,-0.043361034,0.0140053015,0.07059138,-0.07317829,-0.09024291,0.032597248,-0.0046822494,0.0029092543,-0.06858637,-0.030782187,0.06519239,-0.014458568,-0.066988096,0.031567764,-0.008558903,0.046407513,0.017615166,-0.015015993,0.04018279,-0.046955608,0.093851164,0.05498043,0.09081755,0.07009883,-0.05559556,0.05935159,-0.004116664,-0.019505084,-0.008702578,0.0506415,-0.04364003,0.06279857,0.024611868,0.001666397,-0.02967775,0.048236217,-0.09006905,0.078984015,-0.096184194,0.0004793228,-0.12479417,0.013277033,-0.082172975,0.01595541,-0.0057261516,-0.07508082,-0.038520653,-0.00081402453,-0.027055625,-0.056792736,-0.04795417,0.02809402,-0.0144377835,-0.0077921613,0.031526543,0.0063338457,0.08459026,-0.049951155,-0.039912425,0.07462334,0.00775913,0.0132193575,-0.004427196,0.037971303,0.06490457,0.013947122,0.0038667128,0.019140989,-0.09853364,-0.023780001,0.036281586,-0.00794464,0.016782423,-0.0015907097,0.073373534,-0.09095893,-0.09160909,-0.027587388,0.089897126,-0.067531005,0.024115331,-0.03494156,-0.004726181,-0.036014266,0.09582082,0.068024054,0.07090099,0.006673841,0.043545246,0.052019984,-0.0026637649,-0.0049291556,-0.0065274024,-0.03164348,0.055737875,0.02859533,0.06462943,0.055799544,-0.0059039155,-0.086897545,0.030537743,-0.0019148581,0.057581745,0.026667,0.040760733,-0.05154383,-0.037755676,0.02630264,-0.022042716,0.026950095,-0.057070404,-0.025485473,0.049436927,0.03146168,0.04363218,-0.036138453,-0.05224865,7.507568e-33,-0.059950992,-0.027524706,-0.0019960909,-0.0034961163,0.0074189883,0.001153813,-0.024882685,0.03283568,0.031191021,0.023769554,0.003075164,0.01708913,0.090196565,0.09254392,0.17466524,-0.03793626,0.033209153,-0.020868802,-0.00415634,-0.059062857,0.11735026,-0.05136641,-0.061709393,-0.054801162,0.0043195155,0.07670712,0.067217745,-0.10218052,0.025107197,0.0098961,-0.09139513,0.08212021,-0.0880426,0.058325198,0.01507378,0.03353338,0.0107766,-0.07730058,0.031531703,-0.07197784,-0.031146294,0.004477757,0.0059242216,0.0030148705,-0.0016040909,0.042938184,-0.04256087,0.07375633,-0.015356105,0.052340094,0.0054280255,0.018537536,-0.026224827,-0.030750485,0.045593526,0.0059049777,-0.063305736,-0.049742706,0.008832981,0.19189262,0.016500516,0.056332964,0.016163062,-0.011354356,-0.058043875,0.020034162,-0.08881675,-0.041011095,0.12579398,0.07907563,-0.04794226,-0.02628679,0.019861469,0.027913071,0.02397546,-0.040691487,0.044958223,0.0015630493,-0.055351987,-0.04160636,-0.05508926,0.09030005,0.022062257,-0.058204234,-0.02534893,-0.059783842,0.015385991,-0.00900093,-0.05102835,-0.04731361,-0.015359868,0.049886093,0.050578717,-0.024239963,0.071195416,-8.5112124e-33,-0.028782967,-0.0047901543,0.026337676,0.082217924,0.02453315,-0.049313262,-0.07842001,-0.06649187,0.0146316355,-0.01370076,-0.06003701,0.0046712942,0.045453,0.0019420382,-0.021337282,-0.03639167,0.011078924,0.001270296,0.023110384,0.070030384,0.023756346,0.08752517,-0.07473933,-0.12750547,0.036363307,0.032242954,-0.046266556,-0.0010572504,0.0018748852,0.025428219,-0.053616706,0.0017383378,-0.04826289,-0.043295585,0.0026519625,0.032090835,-0.024739234,-0.047354575,-0.02319529,0.011609421,0.059267413,-0.03020388,0.006051147,-0.046155762,0.09492671,0.043136876,-0.049745265,0.05114071,0.023328004,-0.025716761,0.05021702,0.007922309,0.05747437,0.0065597305,0.051818777,0.052061163,-0.017244253,0.0032933021,0.04855063,0.0048310612,0.003928485,-0.0028095655,0.03276672,0.05923003,0.013225997,-0.033443857,-0.0087382775,-0.028256271,-0.011165869,0.036130548,-0.020654839,0.0074649574,-0.011067915,0.033652835,-0.052656915,-0.014787076,0.020776765,-0.0357868,-0.104896605,-0.009242956,0.035261888,0.045518547,0.021225873,0.027611695,-0.1185649,0.02428767,0.10044981,-0.048740234,-0.020748276,-0.02958038,0.0049828673,0.0006821885,-0.00070773985,0.0149552785,-0.015579145,-5.9611274e-08,-0.06530384,-0.015877381,-0.034172386,-0.046018004,0.11089359,-0.0036469707,-0.022554357,-0.031354263,-0.05058704,-0.06930645,0.08388627,0.06307039,-0.06806101,0.09483938,-0.029607868,0.053494744,-0.033845313,-0.1707494,-0.045440942,0.008173336,0.01887028,-0.01256471,-0.0030142118,0.048602562,-0.013503846,0.03063845,0.035794,0.010210782,-0.0070393626,0.08614025,-0.058673758,0.018997008,-0.009728943,0.02959344,0.03618996,-0.055258323,-0.033989612,0.045348868,-0.0017539415,-0.07330962,-0.03371131,0.018726358,-0.069931395,0.017534774,0.06346039,-0.062365897,0.015943905,-0.09241585,-0.07178615,0.067513734,-0.048241116,0.054947227,0.004522333,-0.008693987,0.025252895,-0.041531928,-0.033572692,-0.13828644,0.013003573,0.021933705,0.055244856,0.086258575,0.04350697,0.016706197]'::public.vector,'Design and Analysis of Algorithms Chapter 1 1.4 What Is an Algorithw? Def: An algovithm is a sequence of unambiguous instructions for solving a problem, i.e., for obtaining a vequired output for any legitimate input in a finite amount of time. problem algorithm input ————-» “computer output The following points are important in designing an Algorithm. 1. The unambiguity requirement for each step of the algorithm cannot be compromised. 2. The range of inputs for which an algovithm works has to be specified carefully. 3. The same algovithm can be represented in several different ways. 4. There may exist several algorithms for solving the same problem. 5. Algorithms for the same problem can be based on very different ideas and can solve the problem with dramatically different speeds. Recall The Greatest Common Divisor Problem Definition: Let a and b be integers, not both zeros. The largest integer d such that dla and dlb is called the greatest common divisor of a and b, and it is denoted by gcd(a,b). Where the gcd(a,0)=a (gcd(O,b)=b Note: The symbol dla is read as "d divides a." and it means that d divides a without remainder. t.e a mod d =O ov a/d=c, where',0),
	 (15,'[-0.036956433,0.004050539,-0.05291427,-0.12184542,0.041058253,-0.0006478129,0.045767665,0.017830096,-0.005919094,0.007940649,0.018792408,0.110232964,-0.007416769,-0.011137936,-0.0043743923,0.04434358,-0.078332394,0.016577186,-0.131379,-0.008234061,0.034093477,0.03393714,-0.04372293,0.046068378,0.059835996,0.042191394,0.06512116,-0.069467075,0.013843704,-0.00068656495,0.04096533,0.06586154,0.08438247,0.06958091,-0.005483331,0.018619372,0.033577718,0.029849406,0.00986494,0.027593149,-0.061253287,0.0194268,0.048617944,0.03153319,-0.10657333,0.09414292,-0.049455423,0.021865241,-0.009358061,0.006054221,0.022508739,-0.02708217,-0.07857191,0.044493705,-0.05983587,-0.041722436,-0.0797648,0.01786501,0.028193062,-0.014235434,-0.13948132,0.079578534,0.021890242,0.024899572,0.052922416,0.0077174334,0.040825058,-0.06375132,-0.077993825,-0.07173247,-0.024267912,-0.017726824,0.004982384,-0.048460357,0.010206011,0.05203968,-0.03013672,-0.041903824,-0.0642549,0.01750472,0.017862104,0.023836473,-0.009326716,0.08436259,0.016868375,-0.0050325785,-0.07684842,-0.046829272,0.062210836,-0.049451288,0.09850239,-0.030590786,-0.02572543,8.619725e-05,-0.037220158,0.0134151485,0.015335109,-0.03132218,0.035431433,0.038980428,0.025447603,-0.022487687,-0.09142411,0.04401564,-0.022141138,-0.043391813,0.053803205,0.08397983,0.03123317,-0.04869222,0.015121065,0.0035842303,0.07448957,-0.004369243,-0.005511281,-0.055143148,0.030458933,0.023550741,0.055948514,-0.15476768,0.05016489,0.024888536,0.06900194,-0.034557026,0.05172116,0.046147767,-0.04480566,7.4466465e-33,0.018171525,0.02817622,0.07157849,0.061657455,-0.06413204,0.018585969,-0.028938027,0.009691353,-0.003539475,0.006247366,-0.03786184,-0.020580586,0.09681769,-0.02617422,0.09790835,0.06976764,0.02517641,-0.029819906,0.038303025,0.021168329,0.07354702,0.0484056,0.0058224327,0.029281,0.022358231,-0.012285807,0.03626393,-0.058436453,0.03300127,-0.0011817724,-0.10103244,0.08053218,-0.07186493,0.064270325,0.007679029,0.0049601765,-0.049685627,0.0006486776,0.008051716,-0.010440634,0.01166984,-0.02622709,-0.073421344,-0.028353656,0.02620736,0.026577583,-0.012362205,0.062281877,0.06098481,0.0050829775,-0.02692051,-0.027175715,0.030483242,0.079378836,-0.008394306,0.019695746,-0.03050933,-0.05688439,-0.0072198096,0.11096011,0.04884181,0.075734474,-0.029019628,-0.025774637,-0.05296255,-0.06892478,-0.05394696,-0.0210429,0.052872397,0.06696019,-0.0358754,-0.0261338,0.06666214,0.07711221,0.038996153,-0.009990412,0.0036487204,-0.050327633,0.0068027074,-0.053012587,-0.003347815,0.042899314,0.052545752,0.021469165,0.022394171,-0.0071814447,-0.026755491,-0.055990282,-0.044304106,-0.10475313,-0.027199775,-0.03590932,0.04136731,0.010284097,0.07475283,-7.657217e-33,0.036729507,-0.030884134,0.046565887,0.005346811,0.030436402,-0.1295535,0.0028655017,-0.087060966,0.030478511,0.0028615452,-0.019541584,-0.007306681,-0.008205061,0.11214881,0.06521053,0.008108265,-0.06017965,0.09304958,0.015721915,0.012448999,0.014705739,-0.010240444,-0.03899166,-0.13504164,-0.0007690959,-0.027997643,-0.0037839736,0.035127018,0.008885412,-0.039054833,-0.02185079,0.06575022,-0.019606223,-0.12296779,-0.062438328,0.011170899,-0.0033569,-0.12245012,-0.045745984,0.009664374,-0.047248278,-0.00869908,0.0792621,-0.04085652,0.072830915,0.043805983,0.06025017,0.013742236,0.026755344,-0.0035836769,0.06132434,0.039663777,0.046397418,-0.014747276,0.08966141,-0.026069831,-0.008210172,0.0374174,-0.0005090318,-0.07130651,0.023984153,0.012180978,0.006131431,0.052597772,-0.034501877,-0.00350946,0.057553664,0.034921657,-0.024145719,-0.010072967,-0.084148206,-0.0027310636,0.028235631,0.025568252,-0.0422305,-0.006003098,-0.00879574,0.029105984,0.025128007,0.017593484,0.03628221,-0.022059502,-0.0004461057,-0.017738884,-0.064683154,0.016106293,0.07315064,-0.059182912,-0.039517455,0.008058191,-0.062637106,-0.038799502,0.05944992,0.11939395,0.046116598,-4.9566598e-08,-0.03093038,-0.069623664,-0.14219594,-0.1152773,0.08914743,-0.03496851,0.044906687,0.05058322,-0.046343174,-0.013844553,0.025636557,0.025859652,-0.037629638,0.056518465,0.004018283,0.03428729,0.01832614,-0.16072036,-0.046511184,-0.038868036,-0.019616546,-0.075774655,0.09738388,0.06316406,-0.030829102,0.02625146,0.018091377,0.014407858,0.050699845,0.008454386,-0.028656792,-0.006066914,-0.02982589,-0.09056201,0.0028891033,0.041269235,-0.004936081,-0.037775736,0.08748501,-0.06380051,-0.04407359,-0.033835802,-0.06987946,-0.0044634915,0.12297966,-0.06406471,0.009127904,-0.044320416,-0.08610563,0.016909325,-0.06998657,-0.0059721153,0.00154806,0.011022351,-0.04028438,-0.10132232,-0.040818892,-0.05682768,0.0283034,-0.08163242,-0.006063556,0.056261245,0.07630525,0.02021413]'::public.vector,'dla and dlb is called the greatest common divisor of a and b, and it is denoted by gcd(a,b). Where the gcd(a,0)=a (gcd(O,b)=b Note: The symbol dla is read as "d divides a." and it means that d divides a without remainder. t.e a mod d =O ov a/d=c, where c Is an integer. There are several methods to find the gcd(a,b) - Euclidian''s Algorithm - By definition - Sorting out the common divisors — Prime Factorization Method 1: The Euclidean Algorithm Theorem: Let a=bq+r, where a, b, gq, and r ave integers. Then gcd(a,b)=gcd(b,r). Why? (proof) Let d=gcd(a,b) Then by def, we have d|a and d|b From Number theory we know that: if an integer d divides two integers a and 6 then it also divides any linear combination of a and b. Therefore, a linear combination of a and b that we have is (a-bq), therefove, If dla and d|b then d|(a-bq) But, a-bg=r Therefore, d|r Now we have dlb and d d=gcd(a,b) Then gcd(a,b)=gcd(b,r) v, then d is gcd(b.r), but Which means, instead of finding the gcd(a,b), we find the gcd(b,r) and so on we keep reducing the integers until we veach r=O0. When r=0, gcd(b,r)=b Ex:',1),
	 (15,'[-0.028237617,0.059328742,-0.13953355,-0.13843791,0.03494061,0.011981765,-0.022184638,0.037739076,-0.018343782,-0.015460282,0.001596137,0.061918274,0.019501366,-0.01859503,0.025242034,-0.021610694,-0.026759477,0.07059363,-0.04523575,-0.06040192,-0.02836348,0.022982996,-0.058702346,0.060531545,0.036905903,0.0895208,0.069850795,-0.122087575,0.0052887625,-0.031265415,0.09287869,0.033019803,0.094910026,0.061657544,0.016272837,0.028214876,-0.09510409,0.044074487,0.0067135273,0.040585272,-0.11331639,-0.008916036,0.016104583,-0.002720373,-0.06536182,0.08901024,-0.05057017,0.07344907,0.004607241,-0.03619807,0.05143726,-0.024176367,-0.076841734,0.06452531,-0.012673738,-0.043782342,-0.097219646,-0.0035832394,0.019204563,-0.017269798,-0.04012916,0.022652838,-0.004026342,-0.016225712,0.030111533,0.021161923,0.0049153357,0.006779573,-0.040971424,-0.006527557,0.031977702,0.03378482,0.01350861,-0.0665735,-0.007759419,0.08269484,0.050208766,-0.027329698,0.006959621,0.0029880705,0.036468312,-0.021517653,-0.026580596,0.07814434,0.0410197,-0.03538976,-0.07483836,-0.022310223,0.0712294,-0.059016567,0.08800087,-0.042263336,-0.059659403,-0.006639135,-0.05708181,0.015095445,0.010302711,-0.02761189,0.00452364,0.050761368,0.082823396,0.046221957,-0.057428483,0.02186774,-0.036052633,0.0559528,0.03449713,0.110051274,-0.029540977,-0.06280821,0.022978548,-0.036306825,0.07188241,0.031624436,0.005694073,0.02210401,0.036022272,-0.0010846346,-0.0057400186,-0.043121755,0.023092225,0.046530373,0.08284462,-0.030668914,0.059147976,0.0030770963,-0.031313952,9.2955015e-33,-0.006056647,0.015723763,0.05325053,0.012592682,-0.06043632,0.07421465,0.013371995,0.07123417,0.012064351,0.047761884,-0.062938645,-0.047356527,0.088768855,-0.046444684,0.031108916,0.061423007,0.032317173,-0.060013056,-0.0015741334,0.03616831,0.062396333,0.052900717,-0.01928672,-0.009207241,0.014320775,-0.034780655,0.05468859,-0.053954642,0.042078957,0.019518849,-0.08948484,0.07031303,-0.09030958,0.14283864,-0.022936804,0.017674893,-0.010811625,0.006338225,0.015902912,-0.029310051,0.0126015,0.009118824,-0.04495797,-0.04057535,0.026300654,0.045496587,0.04175069,0.07522181,0.038803123,0.09344443,0.018052548,0.012851583,0.020753061,0.030154087,-0.06431835,0.008723176,-0.02400732,-0.013074355,-0.025999991,0.090409875,0.042404458,0.02982405,0.0028958425,0.014755217,0.017165003,-0.001214881,-0.10062375,-0.09547549,0.043869488,0.068604395,-0.055461884,-0.016006965,0.13460018,0.041986633,0.06166605,-0.08707262,0.0062632123,-0.05296671,0.008525409,-0.06369165,-0.0045752656,0.084886685,0.04020915,0.02984571,0.005852347,-0.074260995,-0.0363118,-0.07709831,0.006952591,-0.050475914,-0.028396633,-0.05984967,0.042495478,0.102279626,0.049705226,-6.71549e-33,0.022592597,0.0037156518,-0.019867314,-0.034310274,0.018157857,-0.052759983,0.06709928,-0.051024448,-0.0036886523,-0.05951868,-0.0011084126,-0.03748766,-0.007833483,0.13510163,0.014783219,0.04951244,-0.05156152,0.043267097,-0.017899275,0.047985297,-0.017233178,0.024816032,-0.04382844,-0.11786724,0.0009250968,0.030246897,0.07821806,-6.42615e-05,-0.028729443,-0.006615113,0.046093382,0.012504836,0.0072748656,-0.06442695,-0.09177629,0.018604409,0.0043880637,-0.1064433,-0.049235445,-0.082882665,0.039913725,0.0032213721,-0.02844017,0.011954243,0.040187415,0.054278985,0.015778407,0.055305935,0.06559294,0.0069560935,0.00630722,-0.023689125,0.021229928,0.0059322044,0.12682064,-0.028826274,-0.032184366,0.032437928,0.005851963,-0.032246966,-0.002010411,0.012488098,0.014736532,0.021660365,0.0357731,-0.030296331,0.047623444,0.066789925,0.013591497,0.02331694,-0.066550404,0.019686997,-0.030233812,-0.026370663,0.039917737,0.018326458,-0.047686145,0.025036158,-0.020643625,-0.072456405,0.0034721037,-0.04256076,0.0016654218,0.034964476,-0.07705773,0.03579598,0.042473167,-0.051000487,-0.018643796,0.05617742,-0.071814425,0.07655983,0.0786137,0.1087351,0.014996738,-4.7807752e-08,0.032894064,-0.021640701,-0.12317588,-0.06212156,0.06253029,-0.0032375916,0.07879675,0.06946183,-0.07206494,-0.0131831365,-0.049595214,-0.009286313,-0.021542579,0.029184936,-0.0074556507,0.010602788,0.055862702,-0.1542825,-0.05849501,-0.073045686,0.015318185,-0.035950907,0.059009466,0.04306691,0.026000582,0.039134197,0.0053310404,-0.009511644,0.060269993,-0.009090244,-0.016428147,-0.021549596,0.03908316,-0.030578503,-0.04030211,-0.007969587,-0.014956181,-0.004358435,0.06763438,-0.012967645,-0.07017666,-0.010654933,-0.09883197,-0.03951432,0.032118488,-0.090766534,0.007468181,-0.009893257,-0.0525055,-0.011524851,-0.17189448,-0.011851489,-0.02702374,0.011519417,0.037086967,-0.15056974,-0.026882483,-0.05257565,-0.0033003115,0.011581185,-0.021482283,0.015335927,0.0005377331,0.017735757]'::public.vector,'and d|b then d|(a-bq) But, a-bg=r Therefore, d|r Now we have dlb and d d=gcd(a,b) Then gcd(a,b)=gcd(b,r) v, then d is gcd(b.r), but Which means, instead of finding the gcd(a,b), we find the gcd(b,r) and so on we keep reducing the integers until we veach r=O0. When r=0, gcd(b,r)=b Ex: find gcd(27,366) by Euclidian''s Algorithm. Solution 366=27(13)+15 27=15(1)+12 15=12(1)+3 12=3(4)+0 >gcd(3,0)=3 Or we can say: the gcd(366,27) is the last non-zero vemainder. That is gcd(366,27)=3 The Algorithm: [Euclidian''s] S21 Input a,b, with a>b S2 if b=O then return a as gcd(a,b) S3 If b40 then compute r=a mod b S4 Set a=b and b=r then go to S2 Method 2: [By Definition] This method is based on the definition where the greatest common divisor of a and 6 is the largest integer that divides both a and b Note: Since gcd(a,b) divides both a and b, the gcd(a,b)<a and gcd(a,b)<b. Let d=gcd(a,b) with a>b. therefore, it ts also possible that gcd(a,b)=b. First thing we do is to set d=min(a,b). Then we check if d divides a and b. if it does then d is outcome. If it does not, then we veduce d by 1 and try again. Ex: Find',2),
	 (15,'[-0.03105282,0.0427948,-0.082397245,-0.12823525,0.05545993,-0.011403626,-0.009979821,0.013196926,-0.06668589,-0.020554645,0.030996734,0.08385924,0.049623318,-0.0358761,0.004936677,-0.035880405,-0.044235814,0.032611284,-0.049344704,-0.08371201,-0.043254253,0.034885604,-0.08009504,-0.00426617,0.03862638,0.0016224082,0.04727405,-0.051378455,0.00326546,0.018856643,0.076119,0.049626257,0.070618205,0.04720779,0.04494741,0.056486677,-0.04455979,0.018120019,-0.025658626,-0.010923123,-0.09827386,-0.030921621,0.01326614,-0.025990847,-0.047408,0.10167779,-0.09608335,0.044143897,-0.03275034,-0.015475422,-0.017639315,0.021468392,-0.02275024,-0.01779633,-0.024710892,-0.058713228,-0.08208282,-0.0993397,0.07994049,-0.071482204,-0.042509407,-0.022388328,-0.025609072,-0.043850906,0.08135808,0.00011093401,0.0568164,-0.06553308,-0.01730847,0.002588707,0.008900644,0.018672168,0.01976413,0.043616552,0.010665886,0.02627804,-0.0023887227,-0.01251286,-0.022357626,-0.05428155,0.04713046,-0.017964924,0.061555985,0.10832358,-0.022476772,-0.10853695,-0.08211982,0.05942505,0.12123072,-0.0016009014,0.0763892,-0.010469727,-0.03540063,-0.04976298,-0.004690203,0.029708559,-0.0009081591,-0.012491577,0.013301906,0.06284779,-0.0030079996,0.053033743,-0.057963043,-0.01813803,0.0031015736,0.04109581,0.0069178157,0.106542446,-0.018762922,-0.06164282,0.0036298567,0.013332304,0.13177289,0.0044647963,0.015043567,-0.021227898,0.005577923,0.0018925504,-0.054898288,-0.015631657,0.041555025,0.06571847,0.06822637,0.03388845,0.043939564,-0.0141825415,-0.0031806065,1.2708015e-32,0.0083735315,-0.021410452,0.051508307,-0.01375456,-0.07161422,0.022439241,-0.05951592,-0.07059916,-0.0608209,0.058461882,-0.09399972,-0.06749372,0.017612211,-0.08682753,0.09303905,0.020286104,0.045980904,-0.010584565,0.04137975,0.0010082349,0.036304668,0.014186465,-0.006652812,-0.06550648,0.0463438,-0.030559564,0.018342705,-0.108021095,0.046904217,-0.0036208918,-0.09024638,0.071455315,-0.09953649,0.08920879,0.011101117,-0.006365725,0.006158954,0.0006584956,-0.043465357,0.008711813,-0.013447524,0.030156579,-0.045613468,0.031345993,0.035485562,0.015014693,0.026663432,0.042644482,0.028694471,0.12866224,-0.020502107,-0.029960055,0.022772953,0.029555842,-0.079082765,0.026128555,-0.014314934,-0.04339005,0.014258727,0.09772638,0.07782299,0.03604185,-0.008023613,-0.0016217635,-0.014361729,0.005623576,-0.07202081,-0.075794294,0.0854466,0.100924686,-0.048110377,-0.04199882,0.12185391,-0.008615084,0.0697315,-0.077075146,0.07433542,-0.041544855,-0.01876776,-0.12396594,0.02808179,0.07418441,-0.0026423472,0.012628053,0.039160952,-0.050784383,-0.06338469,-0.048498295,-0.074271046,-0.07610595,-0.049570277,-0.03233253,0.00064620783,0.060264792,0.089934714,-1.16943585e-32,0.024520209,-0.017788615,0.102871574,0.017982686,0.06958542,-0.048480067,0.046569534,-0.03613511,0.0060174055,-0.044557214,-0.021139128,-0.0067929733,0.008857729,0.051982597,0.02699539,0.02548716,-0.039537203,0.06499084,0.056854628,0.035305858,0.00018741359,0.03263706,-0.077224,-0.08474554,0.01747569,0.081234716,0.046415266,0.024896493,-0.017876033,-0.008221808,-0.03251514,0.066955335,-0.0048392937,-0.01990989,-0.048422344,0.026280923,-0.041809473,-0.07702331,-0.061687224,-0.05007345,0.004833228,0.023270585,0.06787728,0.015024585,0.068895094,0.067597605,-0.015505956,0.09478828,0.017449776,-0.06118116,-0.022179712,0.030203352,-0.015864525,0.029086381,0.09431368,-0.033816095,-0.051701326,-0.032025777,-0.0522066,-0.019072153,0.019881058,-0.013599408,-0.05539596,0.052938074,0.030876737,-0.0155555075,0.041829094,0.0025391353,0.011348926,0.08376075,0.008023705,0.038308848,0.0100884,-0.033106722,0.10382287,0.020110726,-0.0112488605,0.081143275,0.011144476,-0.005346936,-0.005151455,0.06733998,-0.04074271,0.07549569,-0.07599641,0.004098502,0.07822895,-0.036990974,0.009142631,0.039330862,-0.048441693,0.029148199,0.098175734,0.024664214,-0.01340025,-5.502206e-08,0.034897126,-0.055292208,-0.101667345,-0.06916184,0.05124852,0.038544957,0.010589223,0.0037482209,-0.040353045,-0.08679918,0.040461324,0.02121903,-0.0055025597,0.0013060485,-0.021914624,0.009035031,0.015048906,-0.17581509,-0.07980429,-0.04648753,0.005106812,-0.04333359,0.02446544,0.07325352,-0.04182588,0.023472065,0.0059003937,0.006859959,0.00903022,-0.008516877,-0.042163353,-0.067769796,0.0034759762,-0.007038317,0.019996606,-0.0060724034,-0.03769098,-0.03293648,0.08492705,-0.09050853,-0.04306062,-0.016554898,-0.05146772,-0.039169125,0.022424826,-0.019027755,0.022305073,-0.029863233,-0.081775054,0.029027238,-0.087877974,-0.035105493,-0.020874057,-0.039561946,0.058104523,-0.081451684,0.0006304365,-0.11574798,0.04417738,-0.037710886,0.0026330913,0.04538549,-0.014233571,-0.029875593]'::public.vector,'Let d=gcd(a,b) with a>b. therefore, it ts also possible that gcd(a,b)=b. First thing we do is to set d=min(a,b). Then we check if d divides a and b. if it does then d is outcome. If it does not, then we veduce d by 1 and try again. Ex: Find gcd(18,60) GO>18 > gcd(G0,18)=d > d=min(6GO,18)=18 Check: if 18/60 no and 18|18 yes > d=18-1 17|60 no and 17|18 no > d=17-1 - d=7-1 6|60 yes and 6|18 yes Then d=6 is the gcd(GO,18) The algorithm: [by def] S21 Input a, b with arb S2 set d=min{a,b} S3 if a mod d=0O then go to $4, otherwise go to SS S4 if b mod d=O then go to Sé, otherwise go to SS SS d=d-1 go to S3 S6é return d=gcd(a,b) Note: There is a way to improve the algovithm by combining SZ and S4 into one step by using the logical operation AND Note: unlike Euclidian''s algorithm, this algorithm will fail if one of the integers is zero. It means the algorithm here is not specific. Method 3: Listing The divisors of a and b This method also depends on the definition. But it depends more on following the',3),
	 (15,'[0.003993444,0.036616087,-0.12166494,-0.15170339,0.07293515,-0.07677495,0.0041620526,0.0011652715,-0.052862402,0.02443784,0.02164835,0.100354604,0.06051621,-0.012443882,-0.011282446,0.023679996,-0.064757764,0.04390979,-0.104276106,-0.049433425,0.021865834,0.034273144,-0.01790036,0.04035333,0.043185044,0.06902585,0.029563619,-0.08964657,0.029670205,0.0023631866,0.06956436,0.07809572,0.14648664,0.069797814,0.019239945,0.008596708,-0.0070036156,0.02465217,-0.019543393,0.038870297,-0.08876732,0.001302022,0.042148147,-0.03281741,0.018081227,0.16920157,-0.099226706,0.07425295,0.029365262,0.027126491,0.013879442,-0.0047289142,-0.043590326,0.05329755,-0.0085799815,-0.051643923,-0.09830186,-0.029163921,0.03143855,-0.007928035,-0.039808303,0.0152685,0.008727047,-0.031960163,0.062420674,0.016322954,-0.00042635266,-0.066450074,-0.07747569,0.00539742,-0.0050928504,0.023005208,-0.0006614017,0.024656635,0.012877858,0.04879151,0.00058960036,-0.051059563,-0.06071107,-0.031115005,0.016423598,-0.0013446439,0.03783344,0.070578374,0.0010922524,-0.025079668,-0.06906059,-0.03248357,0.10510735,0.027474547,0.028862432,-0.02250392,-0.024387011,-0.058265295,-0.011161762,0.0480648,-0.037654504,-0.004076284,0.049491536,0.05365981,0.023226434,0.035084512,-0.05259426,-0.0126258135,-0.017414661,0.01797895,0.02366689,0.12027649,-0.0006729241,-0.06148251,0.05438187,0.042221617,0.083933294,-0.005283348,0.051894527,0.00013447469,0.029349227,0.042069152,0.005760152,-0.070083685,0.062317003,0.03124969,0.070177466,-0.008804572,0.061987594,0.037147574,-0.0883487,4.3070947e-33,-0.010164446,0.026660824,0.050134946,0.053029686,-0.10910128,0.012450458,-0.021475287,0.0050504217,-0.038465966,0.045784224,-0.0534296,8.3159575e-05,0.09521035,-0.021195484,0.098991446,-0.022571258,0.06215726,-0.023218611,-0.012902778,-0.021689743,0.08426541,0.04864124,-0.043768577,-0.009542287,0.03906136,0.015658157,0.051036406,-0.114871904,0.036674626,0.004874366,-0.071518,0.038317047,-0.0777829,0.0849909,0.0027450873,0.023433179,-0.020292517,0.02644441,-0.002433853,-0.0018737955,0.044741992,-0.04376786,-0.06492023,0.062304653,0.014921204,0.066063754,-0.033043515,0.039293643,0.046761435,0.05397289,-0.032531068,-0.033531513,0.038747665,0.07952409,-0.07919606,0.016300298,-0.028394809,-0.04339013,0.0015807681,0.1042099,0.029817,0.02109145,-0.070642255,0.067855194,-0.024391036,-0.01809986,-0.07474399,-0.07017165,0.044727232,0.08109718,-0.033448532,-0.012334962,0.114918225,0.08679151,0.058914177,-0.04027838,0.0755267,-0.01785427,-0.0014408305,-0.050537005,-0.031448416,0.07729731,0.00829575,0.027789477,-0.028339779,-0.042009164,-0.07460187,-0.08022088,-0.043894432,-0.07102422,-0.02128617,-0.032306455,0.06168305,0.025352307,0.05585163,-3.9068142e-33,0.027441286,-0.032140322,0.080895394,-0.016319685,0.007823732,-0.0997077,0.030376416,-0.08444468,0.033660077,-0.068119176,-0.0020953056,-0.0010544669,0.008975066,0.029539779,0.028541226,0.0049543385,-0.025275907,0.07894895,0.02608401,0.083783746,-0.015141512,0.07437844,-0.04922628,-0.08574461,0.0043029995,0.05077808,0.06895755,0.022811633,-0.0010168029,-0.0031466414,-0.04329492,0.0001599409,0.00017442797,-0.04606025,-0.043737274,0.002371207,-0.04171875,-0.08837811,-0.07922151,-0.069306776,-0.0374363,0.024796436,0.014424629,0.029264979,0.07125851,0.04526295,-0.011206504,0.095660344,0.035683244,-0.04325442,0.016935984,0.014158254,0.03160962,0.037363622,0.12736602,-0.050519045,-0.040850688,0.005824582,-0.07963656,-0.019811425,0.005030697,0.005881363,0.0011198928,0.041039117,-0.033923835,-0.028623553,-0.009662517,0.0516008,-0.019537956,0.034950204,-0.04078598,0.014736275,0.010946962,-0.013274857,-0.007687815,0.02787678,-0.042772993,0.0177665,0.010033434,-0.034618087,-0.0040329006,0.039653044,-0.0037094655,0.036350936,-0.06154292,0.01889739,0.092377044,-0.043596353,-0.025422566,0.019587236,-0.10731737,-0.06723414,0.08465611,0.06957428,-0.031146979,-5.1143637e-08,-0.00916679,-0.069977514,-0.036346603,-0.1245356,0.12120002,0.028962575,0.028760705,0.06327623,-0.03350381,-0.08591354,-0.011985974,-0.0062042894,-0.025812196,-0.010519815,0.026800828,0.0079502445,0.060928985,-0.14285047,-0.062196575,-0.03318374,-0.0068073785,-0.043114606,0.050934035,0.026477076,-0.022407345,0.022367623,0.013669364,-0.04055253,0.050963383,0.00084325095,-0.040129356,-0.08045237,-0.016723804,-0.018857153,0.055784106,0.0053957477,-0.049431406,-0.061720982,0.055208918,-0.046141893,-0.04476247,-0.041479867,-0.045190576,-0.01356454,0.01888064,-0.04730575,-0.03025175,-0.038123764,-0.08283336,-0.004655337,-0.101758055,-0.018327527,-0.016303746,0.0056273555,-0.008380138,-0.077854164,-0.02871596,-0.06789033,0.015884759,-0.028787479,0.008660044,0.06790302,0.039722692,0.019566687]'::public.vector,'the logical operation AND Note: unlike Euclidian''s algorithm, this algorithm will fail if one of the integers is zero. It means the algorithm here is not specific. Method 3: Listing The divisors of a and b This method also depends on the definition. But it depends more on following the definition literally. Ex: find gcd(GO,18) by listing the divisors Ans: GO: 1,2,3,4,5,6,10,12,15,20,30,60 18: 14,2,3,6,9,18 The largest common divisor is 6 so d=6 Is the gcd(6O0,18) The algorithm: [by listing the divisors] S12 find the divisors of a and name them as az, a2, ..., An S2 find the divisors of b and name them as bz, bo, ..., bn S3 Sort out the common divisors that ave found in $1 and S2 and name them as dz, do, ..., ax S4 d=max{d1, do, ..., Akh, d=gcd(a,b) The problem with this algorithm is in the first two steps. Finding divisors of an integer usually takes time, especially if the integer is large. The fastest way to find all the divisors is by starting with the number itself and dividing it by itself, then reducing it by 1 and start again.',4),
	 (15,'[0.06515236,0.03064589,-0.027052851,-0.04654526,0.14450867,-0.08330004,-0.0044749267,0.0059881248,-0.004865483,0.0047299964,0.02624766,0.040008422,-0.0050726663,0.0054152138,0.010135698,-0.090612546,-0.023884367,0.04442586,-0.03466672,-0.06909216,-0.030738037,0.013577849,-0.023256578,0.049370714,0.0092554875,-0.004790323,-0.03215575,-0.0967819,0.069017395,-0.040555567,-0.006979318,0.039251592,0.14042678,0.063386425,-0.058773298,0.01701754,0.0030888775,0.03136917,0.02667518,0.077750646,-0.06385812,0.01043369,-0.0072836857,0.04552629,0.021629356,0.023785748,-0.00828735,0.08879627,0.04290041,0.034408838,-0.013758419,0.038252093,-0.007253706,0.04015089,-0.025987206,-0.04111505,-0.021395203,-0.0043409117,-0.018468283,0.016420415,-0.12517592,-0.01552718,0.020111764,-0.12209097,-0.025069894,-0.009117389,0.034215827,-0.0659315,0.0034284575,-0.021135671,0.06399912,0.06882375,0.008138306,0.012552015,0.080913566,0.0039442275,0.05344432,-0.03155601,-0.012825596,0.021021709,0.04201281,-0.019842226,0.015173106,0.05403651,0.044043876,-0.031942435,-0.0052934047,0.03749026,0.07001553,-0.017795509,0.009080507,-0.020630073,-0.019951468,-0.05660181,-0.03315849,0.053305004,-0.02417608,0.027465325,0.027060071,0.037987866,-0.012054234,0.001915383,-0.027009064,0.06416276,-0.065181494,-0.061570253,0.06061537,0.09961703,-0.054029107,-0.007725355,0.037079006,-0.07113682,0.087188885,0.043805845,0.033955142,-0.051175773,-0.022312194,0.01618942,0.019229557,-0.023788827,0.0038417312,0.029987387,0.077215634,-0.0038160307,0.0041137445,0.13157433,-0.048824374,-6.483064e-34,-0.0211661,0.035983384,0.0024541104,0.0048296293,-0.16441034,0.00033793907,0.023125479,0.062592894,0.06858109,0.015583474,0.011439417,-0.038013857,0.07656816,0.05055066,0.042017344,-0.10427277,0.053877037,-0.0033995274,-0.04608567,-0.00266572,0.07056036,-0.04635612,-0.07868515,0.024270628,0.084589206,-0.005889118,-0.0069693346,-0.06357103,0.0786404,0.037060708,-0.08990311,0.02785101,-0.0887941,0.038129732,0.076911375,-0.026043639,0.06900599,0.04630869,0.027700799,-0.06375151,-0.095474064,-0.04096704,-0.008087779,0.0065055126,-0.08725702,0.044138175,-0.02750765,0.080048904,-0.013453562,0.016481468,-0.012362266,0.0022227732,-0.019032186,-0.008454687,-0.004013622,-0.013659286,0.05186199,-0.01493873,-0.0028318122,0.078050405,-0.026323587,0.044836514,-0.039153393,0.026742393,-0.06387642,-0.026779665,-0.04095929,0.020670883,0.01406187,0.06768573,-0.06181733,-0.003851016,0.04072966,-0.011116991,0.034539714,-0.042242493,0.032128833,0.025333198,-0.038328245,0.043347362,-0.005251613,0.10504259,-0.012378685,0.030238252,0.0635731,-0.059084196,0.024123559,-0.053282265,0.02736963,-0.052817382,-0.024159491,0.029230565,0.08026331,0.008158023,-0.021049598,-4.2138424e-34,0.018237073,-0.08347359,0.08998697,0.032320347,0.0072026514,-0.068125084,-0.044920206,0.002159073,0.059879858,-0.0786946,0.018666448,-0.0075943302,-0.0111188395,0.040243547,-0.0043575736,0.09211219,-0.025017045,0.10769817,0.006975353,0.05886779,-0.034174856,-0.029463159,0.018690381,-0.08758856,-0.039779823,0.0022329073,0.023556432,-0.016730895,0.02590216,-0.018245196,-0.095352404,0.012208153,0.018560294,-0.10776942,-0.029242827,0.038708307,-0.12041864,-0.08595708,-0.026144866,-0.030747613,-0.026657017,-0.020034024,0.020495592,0.0011912192,-0.015325749,0.035554,-0.0044253897,0.03136611,0.020372514,0.09589258,0.057294745,0.033318304,0.04764348,0.055494465,0.09907424,-0.03263219,-0.044133198,0.04652946,-0.018954365,0.04780182,0.0330275,0.0021636134,0.011845447,0.06982284,-0.07927912,-0.034849856,0.034586478,0.014487642,-0.05387197,0.026219632,-0.019021368,0.049474053,-0.014024311,0.067381814,-0.10918532,-0.0050822543,-0.054848995,0.06622286,-0.026184833,-0.011867084,0.10840296,0.0073901475,-0.08103279,-0.15349704,-0.06399448,0.038323507,0.08235247,-0.0640065,-0.023727428,-0.04536151,-0.064047225,-0.0664033,0.06724888,0.09378342,-0.0028615396,-3.2392446e-08,0.012137984,-0.045640185,0.013194908,-0.14435497,0.07428183,0.075042725,0.014432426,0.067744724,-0.028651314,-0.038489766,0.032212917,-0.013926992,-0.0040135602,-0.024371564,0.091579765,-0.029901836,0.087131515,-0.12779467,0.00066882867,-0.025583899,0.00077669503,-0.01936109,0.06296291,-0.03844113,-0.01373233,0.014167062,0.02783506,-0.05735804,0.00209472,-0.06006602,-0.036333926,-0.03337307,-0.10027322,-0.042799026,0.05721119,0.07150045,-0.08694399,-0.057081204,0.055761218,-0.035163376,0.013887089,-0.0059065125,-0.081684045,-0.024129365,-0.07085338,-0.036026653,-0.025205187,-0.054213814,-0.068785325,0.015327273,-0.098597854,0.0058357655,-0.017231967,0.00074453774,-0.018802023,-0.00029185816,0.004171158,-0.074945986,-0.021144813,-0.019216243,-0.0402027,0.03446222,0.005891689,0.020379828]'::public.vector,'an integer usually takes time, especially if the integer is large. The fastest way to find all the divisors is by starting with the number itself and dividing it by itself, then reducing it by 1 and start again.',5),
	 (16,'[-0.022556022,0.040362414,-0.04828973,-0.13470736,-0.05804226,-0.052598793,-0.05371212,0.01585092,-0.08717035,-0.014296838,-0.14029962,-0.04544778,0.084794365,-0.03068304,-0.051514417,0.019350458,0.015477515,0.0011295642,-0.03236158,-0.06668038,0.066743314,0.010529416,-0.09350919,-0.030206162,-0.120959535,0.018193956,0.035329163,-0.045027588,0.027102426,-0.0039215437,0.09086088,-0.037464805,0.041268345,0.054304857,-0.027061636,0.010776886,-0.029568635,-0.09104714,-0.030513663,0.012149441,-0.052093606,-0.028696537,-0.02122341,-0.03220939,0.021704275,-0.003877454,-0.0298748,0.021888567,-0.039530423,-0.01923816,-0.10001091,0.02042319,-0.045981452,0.0070013804,-0.037805945,-0.068929896,0.056489445,-0.011349131,-0.032924153,-0.037213635,0.0039660847,-0.054589678,0.02541601,0.016706394,0.036655292,0.005854334,0.07257654,-0.02470357,0.019693164,0.062340856,0.028915387,0.03508579,-0.047134105,0.05392011,0.026196001,0.053009182,-0.00995107,0.004164131,-0.010830051,-0.020569066,0.08220022,0.030869368,-0.06810546,0.012267895,0.031763326,-0.020774342,-0.0946531,0.036190234,0.07861643,-0.0028228222,0.009473897,-0.06597137,-0.043553274,0.007319063,0.13569456,0.050601132,0.047028795,-0.020902429,0.0054989643,0.022180961,-0.022822684,-0.081601,-0.0007289917,-0.032189604,0.05590788,0.052364904,0.054396976,-0.02268343,0.048076816,-0.12025119,0.03078575,-0.035258833,0.02608636,0.020741357,0.11157636,-0.00889932,0.0015490263,0.017658262,0.0077887177,0.038972825,-0.07321239,0.0010985719,-0.033844948,0.029386671,0.051859807,-0.04032736,0.021294193,6.5372966e-33,-0.1268115,0.05287119,0.03137843,-0.035520375,-0.024088044,-0.0102033485,-2.385019e-05,0.071170576,0.03669591,-0.014956452,0.012240324,-0.034169074,-0.0063803364,0.042454794,0.14926153,-0.036898214,0.054107666,-0.01587841,-0.070004106,-0.07236572,0.06820031,-0.092864916,-0.01879147,0.01818321,-0.026290761,0.03383311,0.026209805,-0.10654184,-0.009781511,0.0140433675,-0.08997435,-0.029999327,-0.06590191,0.051608834,-0.040290132,0.039477363,0.021975404,-0.010811264,-0.01327506,-0.08472342,-0.000540247,0.0013799189,0.07516505,0.0728087,-0.001235536,-0.05975885,-0.03556341,0.0084839,-0.07837225,0.021971095,-0.008425853,0.024987958,-0.025240919,-0.044730235,0.0057455716,0.006276956,-0.07177091,-0.05489639,0.052558914,0.071671665,0.02383744,-0.02983228,0.036818773,0.035316437,-0.0561455,0.05030952,0.0046588746,-0.06303798,0.07488632,0.050393835,-0.08750282,-0.031593587,0.017637027,-0.017062888,0.004844005,0.039737787,0.061766755,-0.051699232,-0.00881035,-0.0144111095,-0.035854563,0.115223296,0.05922969,-0.04295456,0.03466738,-0.078127466,-0.05324718,-0.005093838,-0.02305647,-0.0156061705,-0.04477072,0.062452324,0.020718575,0.039074294,0.02185482,-8.461022e-33,-0.030021915,0.045343943,0.0349615,0.05776429,-0.02344162,-0.061359327,-0.06949323,-0.06901675,0.061444912,-0.09617397,-0.08675268,0.013456766,0.11880192,0.023558779,-0.030867426,-0.005804594,-0.07883464,-0.057551358,0.105738804,0.10311375,0.023121761,0.052424937,-0.07774206,-0.044961687,-0.0053135375,0.048150845,-0.03446367,-0.08499073,0.05995535,0.019812612,-0.02299512,-0.058404688,-0.050013706,0.046645578,-0.00284356,0.039567083,0.05105617,-0.0074632196,0.0062260823,-0.009315967,0.110838525,0.022628905,-0.006964677,-0.018409243,0.06999886,-0.030335713,-0.05445263,0.07823613,0.047861632,0.013694748,0.022327293,0.035359517,-0.041112244,-0.0049958043,0.023442458,0.09726608,0.00947596,0.009501097,0.047957484,-0.0059780516,-0.05759947,-0.036463916,0.030414741,0.03323769,-0.014081569,-0.016458374,-0.020997014,-0.04393724,0.02516524,0.019607916,0.0035754193,0.08905089,0.013955986,0.031230321,-0.00554473,0.019854361,-0.082155176,-0.09147635,-0.07858119,-0.00012596842,-0.006872786,0.08533721,0.004902834,0.007965424,-0.03945684,0.07757012,0.06810917,-0.0788378,0.058284216,-0.03651699,-0.020641593,0.071422674,-0.026859233,-0.048719537,-0.07540277,-7.1800336e-08,-0.021336006,-0.012410144,0.091527514,-0.019538198,0.06424021,-0.011910626,0.03068538,-0.066705175,0.045315903,-0.0539863,0.020237828,-0.042758048,-0.045953367,0.060361598,-0.0022728979,0.020173606,0.037041947,-0.017762309,-0.03526641,-0.05483809,0.08621653,-0.05074869,-0.036446176,0.099213496,0.05960476,-0.046428613,-0.020980831,-0.02823995,-0.027338803,0.048631236,-0.02995763,0.0065075946,0.06432642,0.104303166,0.06618434,0.0026570421,0.016383102,0.02126907,-0.0528181,-0.056938097,-0.014954266,0.12272585,-0.03892835,-0.057976328,0.073162824,0.00961336,0.053728707,-0.043695778,-0.023264008,0.11639839,-0.041886438,-0.011240122,0.013823192,0.0152977165,0.06529947,-0.008350216,-0.010205292,-0.08169924,0.025120206,-0.021008886,-0.022216916,0.12583466,-0.0011882188,-0.01557179]'::public.vector,'1.2 Fundamentals of Algorithmic Problem Solving The Algorithms ave not answers to a problem but specific instructions for getting answers. What do we need to design an Algorithm? 1.Understanding the Problem e Read the problew’s description carefully. e ask questions if you have any doubts about the problem. e do a few small examples by hand. e think about special cases and ask questions again if needed. Definition: An input to an algovithm specifies an instance of the problem the algorithm solves. It is very important to specify exactly the set of instances the algorithm needs to handle. IF you fail to do this, your algorithm may work corvectly for a majovity of inputs but crash on some “boundary” value. Note: A corvect algorithm is not one that works most of the time, but one that works correctly for all legitimate inputs. Do not skimp on this first step of the algorithmic problem-solving process; otherwise, you will run the risk of unnecessary rework. 2.Ascertaining the Capabilities of the Computational Device Make sure that your computational device is capable to process the algorithm you intend to design. There are two types of algorithms, sequential algorithms and parallel algorithms. Most of the',0),
	 (16,'[0.016053686,0.02653373,-0.06266336,-0.04036976,-0.09643619,-0.084884696,-0.10348579,-0.036827292,0.015546245,0.022224385,-0.027958818,0.03301328,0.05074326,-0.051685598,-0.031273223,0.03221984,-0.0066760415,0.006848931,-0.029198047,-0.053398915,0.118321754,-0.029640313,-0.007838251,0.0048226886,-0.071816795,0.035082098,0.01065452,-0.07444219,0.027237456,0.007910423,0.06808646,-0.012517138,0.037679255,0.045454163,-0.039259516,-0.007433905,-0.07338457,-0.077215634,-0.007225305,0.010587216,-0.051318955,0.018815868,-0.058978245,0.0204232,0.052405868,0.034171216,-0.033711046,0.0014731082,-0.02321253,0.040613413,-0.05698631,-0.01375609,-0.053089343,0.026804708,-0.043806896,-0.043014504,0.049815804,-0.011193076,-0.0439294,0.042906698,-0.06988967,-0.06848867,-0.039980914,0.009308983,-0.0028053445,-0.008667542,0.06363824,-0.03720574,0.04961546,0.049813118,0.029995702,-0.0025305082,0.025585767,0.051273108,-0.010877704,-0.0025241924,0.06835513,0.008076756,-0.059602037,-0.097811125,0.06825135,-0.011503054,-0.047227096,-0.005255612,0.048909687,-0.081751235,-0.04168094,0.054454073,-0.0015469533,-0.08749232,0.024494424,-0.033670973,-0.032984696,-0.07102363,0.1289616,0.08560381,0.02318905,0.012960066,-0.017020471,-0.027985452,0.049860507,-0.013480531,0.06641208,-0.008834243,0.025694223,0.017032968,0.030814316,0.03256629,-0.045401298,-0.06401268,0.048667647,0.0714563,0.047730234,0.062246233,0.039522648,-0.0032497952,-0.061214495,-0.044046763,0.015973503,0.1332973,-0.07990027,0.0076819705,0.06828143,-0.0038510868,0.021639425,-0.04939083,-0.040841635,4.0966603e-33,-0.09614027,-0.008741083,-0.050157547,-0.065215185,0.034478582,-0.027470415,0.06535566,0.07794553,0.0050664544,0.0019737645,0.012295501,-0.027810026,-0.023898857,0.0642284,0.11780581,-0.049568113,0.033450842,-0.016360812,0.0015989834,-0.035212863,0.024209017,-0.085915804,-0.01680511,0.009346364,0.034432545,-0.04224418,0.022108443,-0.072775446,-0.027997045,0.024210285,-0.040851705,0.054515414,-0.10869247,-0.0004016867,0.050203446,0.025771484,-0.009240283,-0.07507111,0.023070697,-0.08948749,0.030366495,0.031151364,0.046070777,-0.033273086,-0.11677207,-0.050800297,-0.034223266,0.034183275,0.056549672,-0.013702261,0.043375842,-0.011414875,-0.035423145,-0.056742877,0.036096983,0.0067127296,-0.04839098,-0.053891975,0.07307709,0.18397649,-0.0760665,-0.010971271,-0.013251548,0.07807317,-0.03991442,0.024964921,0.019148357,0.105560735,0.017803688,-0.02369328,-0.07169965,-0.078291945,0.0073027494,-0.013219287,-0.024460908,0.04673509,0.081030615,-0.037034053,-0.10301734,-0.008199079,-0.022200638,0.088424414,-0.024690295,-0.026756352,-0.0040611085,-0.0072505362,0.019632699,0.034951836,-0.02342051,0.0034970092,0.012358475,0.03959241,0.022655908,0.034371633,-0.04253118,-7.2111605e-33,-0.01626124,-0.05819847,0.0075837425,0.05784121,0.062086917,-0.0746575,-0.05851553,-0.113526665,-0.048826706,-0.083716094,-0.06567426,0.017345045,0.042730283,0.02115469,-0.0070871194,0.0014598841,0.0005036651,-0.001370974,0.089313574,0.05742516,-0.042740144,0.05774807,-0.010425,-0.1252185,-0.014637296,-0.004441578,-0.03660656,-0.05041766,0.03036412,0.0068121194,0.001665134,-0.047209624,-0.019472394,0.048182767,0.044653222,0.028704913,0.08400078,-0.03361782,0.04217742,0.016008245,0.13461398,0.024618888,-0.038712293,-0.056237865,0.10605465,0.0071865194,-0.11332201,-0.016345039,0.018456066,0.008055895,0.045468982,0.07027911,0.022881333,-0.001442935,0.046821907,-0.008293708,-0.03275664,-0.009688351,0.1175547,-0.014115993,-0.01869512,-0.08692709,0.001170489,-0.06254605,-0.0011064215,0.01972888,0.0191621,-0.019201739,-0.028872509,0.05395557,0.0012159221,0.02961727,-0.03427601,0.059555147,-0.05089796,-0.0008078292,0.031846277,-0.027713574,-0.06622718,-0.039693724,0.058657,0.056027893,-0.049583953,0.015915826,-0.12737598,-0.0043424303,0.06347749,-0.06336231,-0.033204846,-0.08868869,-0.026558679,0.025154715,0.00790706,-0.07033742,-0.05267242,-6.288996e-08,0.052961532,-0.08891015,0.117133595,-0.009012309,0.09870733,-0.030504653,-0.066267066,0.00497914,0.022135535,-0.05409216,0.11564943,0.0039044362,0.02627079,0.017586337,0.026778882,0.051589,0.029594924,-0.08145008,0.0175352,-0.04503158,0.008506776,-0.0069270227,0.036357798,0.10149909,0.045120183,-0.052648474,0.06072367,-0.03567736,-0.04811295,0.07377897,-0.039232273,-0.00048399586,-0.030244127,0.02963649,0.08185113,-0.08789216,0.033229236,0.024120213,0.053491537,-0.05169736,-0.0048022475,0.019449972,0.03055224,0.0434071,0.09582418,-0.059735343,-0.05205236,-0.06876581,-0.00475457,0.054575708,-0.0016826128,0.01811819,0.04392424,0.038800757,0.021671416,0.019867213,-0.0080092205,-0.08142323,0.043275364,0.0331588,0.01904502,0.052426446,-0.007865677,-0.0427937]'::public.vector,'the algorithmic problem-solving process; otherwise, you will run the risk of unnecessary rework. 2.Ascertaining the Capabilities of the Computational Device Make sure that your computational device is capable to process the algorithm you intend to design. There are two types of algorithms, sequential algorithms and parallel algorithms. Most of the algovithms in use are still controlled by computers closely to the one that outlined by John Von Neumann 1903-1957. Such algorithms ave called sequential algorithms. Sequential Algorithm — Algorithms that ave based on executing the instructions one after another, one operation at a time in a chronological order to solve a problem. Parallel Algovithm - The problem is divided into sub-problems and are executed in parallel to get individual outputs. Some of the new versions of computers does not follow the concept of random-access machine (RAM). These computers can execute operations concurrently. An algorithm designed to be programmed and executed on such machines are called parallel algorithms. Note: The concept of designing algorithms that we will discuss in this course is the essential algovithwics procedures which is sequential algorithms that are proceeded under the RAM Model. Question: Should you worry about the speed and amount of memory of a computer',1),
	 (16,'[0.02936686,0.07633535,-0.045833487,-0.062162586,-0.0959755,-0.07950741,-0.076095186,0.029938541,0.0035041373,0.018705206,-0.028741922,0.050921384,0.06559965,-0.017002586,0.01687064,-0.028462691,0.025595961,0.059907515,-0.037415918,-0.074997604,0.04796762,-0.0006856007,-0.031365994,0.0022480548,-0.08185039,0.048466086,0.023448454,-0.093812704,0.011683987,-0.0076470957,0.049684834,-0.04772313,-0.020771347,0.058849785,-0.04878584,0.04144147,-0.039170124,-0.019118633,0.0024642276,-0.016360197,-0.0381764,0.05018704,0.03398505,0.0229084,0.106481075,0.051776815,-0.043618474,-0.036585264,-0.039561555,-0.0008985968,-0.07896014,-0.011731349,0.026084902,-0.011507398,-0.044355504,-0.038076848,0.04795649,0.0001766433,-0.030528622,0.055850837,-0.05491113,-0.08280056,0.008747413,-0.029074088,-0.015457931,0.007538208,0.079242155,-0.036226932,0.05396724,0.06792434,0.055372678,0.00604671,-0.01658438,0.03527822,-0.090783976,-0.046576068,0.034022566,0.014801476,-0.03211408,-0.029169993,0.053992376,-0.02866162,-0.02234485,-0.023060992,0.041920643,-0.028763954,-0.07287994,0.04587638,-0.02625329,-0.11550682,0.0317374,-0.030551627,-0.037437554,-0.11440879,0.098747924,0.08389502,0.022043433,-0.019200481,-0.00909501,-0.018309405,0.07318495,0.024506288,0.041511625,-0.009785083,0.029204363,0.036662865,-0.0102576865,0.062120195,-0.013220433,-0.037233636,-0.012092541,0.0102576,0.024902709,0.04485561,0.045667592,-0.05178075,-0.005293279,-0.05868212,0.020249387,0.14018731,-0.033245075,-0.011244782,0.052602954,-0.018074224,0.03886365,-0.01912352,-0.094331354,1.4048249e-33,-0.13963905,-0.013065816,0.0055963895,-0.0061893263,0.0047617955,-0.037723042,0.06709467,0.019763196,0.040472545,0.012306794,-0.01246769,-0.016811825,-0.032483824,0.08940755,0.10301012,-0.024896223,0.035403736,0.014483698,-0.006793115,-0.07484145,0.048976585,-0.042733155,0.0706661,0.013945727,0.040205333,-0.08744529,0.010455236,-0.06517368,-0.031677734,-0.001076357,-0.016275086,0.009860311,-0.10219322,0.026581287,0.059605587,-0.023949014,0.010026816,-0.09525996,0.043762825,-0.043473575,-0.008126922,0.023160582,0.052009683,-0.049284387,-0.09482609,-0.04320599,0.025798837,0.027560895,0.03813092,0.0058180992,0.039000854,0.021046469,-0.033540048,-0.04797768,0.06379422,0.025069468,0.0027196242,-0.027316771,0.029865496,0.16883262,-0.06526555,-0.046101797,-0.05134039,0.041524094,0.00060109096,0.0013525807,0.028986715,0.14465454,0.034346685,-0.006797183,-0.011325266,-0.10748798,0.024775803,-0.023517612,0.031324454,-0.0052976767,0.05632012,-0.03552419,-0.121775344,0.021710947,-0.02579151,0.052303225,-0.05566706,-0.02494539,0.041948304,0.012654739,0.046272635,0.016808495,-0.030969925,-0.06520947,-0.03571989,0.05115764,-0.006860252,0.006932624,-0.05262718,-4.7419005e-33,0.007082126,-0.060232393,0.028132737,0.110016465,0.09989725,-0.05912726,-0.048781607,-0.13441776,-0.01941131,-0.06695921,-0.066596165,0.012362638,0.03434691,0.032835804,-0.0148074,0.018858172,-0.019332124,-0.013053378,0.057306103,0.03422509,-0.06433006,0.010391972,0.025442783,-0.10392258,-0.020910082,-0.0102749895,-0.07764402,-0.06448692,-0.0057361014,0.014096206,-0.026189806,-0.028027693,-0.013492146,0.0070681144,0.031059816,0.009308218,0.042077944,-0.023275329,0.07011204,0.0078046396,0.062197443,0.01977375,-0.022618307,-0.06470759,0.0607004,-0.004423786,-0.1764642,-0.011240196,0.011729134,0.068694696,0.032839555,0.06446369,0.04133124,0.008232869,0.027194249,-0.02495711,-0.0737373,-0.0057712635,0.0800629,-0.008581483,-0.049007844,-0.08880554,0.0023707827,-0.030015856,-0.0177693,0.03631991,0.045989607,0.006092465,-0.033908356,0.037983503,0.0062083025,0.019273112,-0.012372724,0.09414773,-0.08426392,-0.022437507,0.043868758,0.00055863854,0.004395206,0.013509314,0.06546567,0.09068842,-0.050063383,0.0037369297,-0.11886682,-0.03217002,-0.009921786,-0.014882609,-0.03029018,-0.11317068,-0.009312351,0.029590417,0.073235966,-0.013080541,-0.0691116,-5.7953145e-08,0.03762589,-0.08467575,0.10977357,-0.07711959,0.060487468,-0.02196115,-0.11283197,0.0029498155,0.018477906,-0.018836401,0.11601806,0.009134525,-0.0020016222,0.021650197,0.007064188,0.021363392,0.07812545,-0.10514754,0.0012678525,-0.07152454,0.0001156134,0.016265368,-0.0023212028,0.07876103,0.06456209,-0.031006554,0.05097713,-0.0118350005,-0.025814919,0.081240796,-0.05112566,-0.033895638,0.0006565434,0.03458327,0.10525459,-0.083656564,0.05614751,0.028012788,0.004968483,-0.013442647,0.026050344,0.02085397,0.05036171,0.026728166,0.08071366,-0.06940998,-0.046666544,-0.043611564,-0.0025762278,0.032159988,-0.005173793,0.06584755,-0.020866765,0.069261,-0.010760447,0.025785448,-0.010093772,-0.080518536,0.032717355,0.01258072,0.017427126,0.04134684,-0.031466577,-0.011371833]'::public.vector,'on such machines are called parallel algorithms. Note: The concept of designing algorithms that we will discuss in this course is the essential algovithwics procedures which is sequential algorithms that are proceeded under the RAM Model. Question: Should you worry about the speed and amount of memory of a computer at your disposal? Answer: a. For practical scientific exercise, the answer Is no. b. IF you are designing an algorithm as a practical tool, the answer may depend on a problem you need to solve. Even the “slow” computers of today are almost unimaginably fast. c. On the other hand, there are important problems, that are very complex by their nature, or have to process huge volumes of data, or deal with applications where the time is critical. In such situations, it is imperative to be aware of the speed and mewory available on a particular computer system. 3.Choosing between Exact and Approximate Problem Solving - Approximation: Example: Integration problem. Exact: Example: gcd(a,b). 4.Algorithm Design Techniques (Strategy or Paradigm) An algorithm design technique is a general approach to solving problems algorithmically that is applicable to a variety of problems from different areas of computing. The main concern in this course',2),
	 (16,'[-0.027128447,0.11311003,0.00624947,-0.084148966,-0.08909423,-0.10986268,-0.04848288,0.076242656,-0.021383837,0.09971806,-0.03637118,-0.015527664,0.11608965,0.0026579583,-0.014305894,-0.0068465946,-0.01650764,0.076325655,-0.015583828,-0.10260159,0.0485077,-0.009280255,0.008849567,0.02726502,-0.004541901,0.061534066,0.0146529535,-0.005398992,0.091813356,0.014585355,0.04263332,-0.0012045514,0.04470279,0.033009406,-0.08854783,0.0515913,-0.060849857,0.0051206606,-0.06639098,0.03147702,-0.09768467,0.028998412,0.035101093,-0.012304305,0.07023026,0.00041958847,-0.10365413,0.04749422,-0.08322996,-0.0027919738,-0.15372247,-0.016742911,-0.048649628,-0.004285688,-0.023148792,-0.057519108,-0.0004099345,0.012939497,0.023955936,-0.035343375,0.004449649,-0.022887522,-0.06771468,-0.00022060233,-0.02654205,0.03079933,0.056729045,-0.033037335,0.014876682,0.09951525,0.019312974,-0.005460378,-0.022597894,0.061051305,0.037093814,0.041452453,0.028810143,0.009496558,-0.09177467,-0.030546991,-0.0034163517,0.042134944,-0.014547201,0.04167498,0.065759435,-0.018062254,-0.048134718,0.017486775,0.011229167,-0.0677201,0.0568706,-0.112506956,-0.10509415,-0.054307636,0.12083349,0.00025702588,0.041774597,-0.019004093,0.04764848,-0.0060228547,0.022447322,0.014350498,0.0069954456,-0.105139226,0.020492284,0.0076185134,0.0379698,0.07890426,0.06702527,-0.087546006,-0.04320355,-0.026040755,-0.03411291,0.009843495,0.0374807,-0.056783684,0.00091543095,-0.05941032,0.008977716,0.047633864,-0.007916309,0.03932618,0.06386677,0.04446284,0.030326499,-0.049151976,-0.030971572,4.1527593e-33,-0.06812408,-0.030959953,0.0008101486,0.06283386,0.0057362993,-0.008188638,0.035438787,-0.004883824,0.074719116,0.029397618,0.051169556,0.047512148,0.025186226,0.09219215,0.1275993,0.007963789,0.020127958,-0.0079600485,-0.07690573,-0.035795037,0.07299596,-0.10677434,0.08185345,-0.03129426,-0.010106978,0.074112885,0.056593858,-0.02099841,-0.030372709,-0.0052554295,-0.037522994,-0.022720655,-0.06791308,0.08586726,0.0073280227,-0.0003831517,0.07386942,-0.08075682,0.054524392,-0.015633387,-2.6390753e-05,-0.004498237,0.03491779,0.10086418,0.05005099,0.01622825,0.0041941637,0.055578124,0.061809625,0.06191198,0.03431845,0.032209873,-0.013228786,-0.066978835,0.017611152,0.050276116,-0.0646657,-0.054919004,0.016669195,0.08735495,-0.041687246,0.024394402,0.012511421,0.00934327,-0.0658866,0.041856308,-0.07146348,-0.012186639,0.09103104,-0.014117649,-0.08450566,0.022847498,-0.010785753,0.03681659,0.02326901,-0.06845072,0.0788882,-0.0027637559,-0.049014036,0.0013573492,-0.047808815,0.06629867,0.057043035,-0.035915196,-0.04148557,-0.04917251,0.02215433,0.036771853,-0.019197375,-0.09232672,-0.017932609,0.027064363,0.0003154178,0.014153678,0.0774844,-5.976027e-33,-0.031712182,0.030373726,0.028208261,0.043965343,-0.0014209955,-0.10286707,-0.03930965,-0.12993461,0.09130674,-0.081475616,-0.047605317,0.016280098,0.022932379,0.011896868,-0.08262932,-0.011743528,-0.019588001,-0.042667404,0.04590004,0.08923682,-0.011678519,0.0836955,-0.12826915,-0.062351614,0.048819005,-7.75551e-05,-0.061503462,-0.011386138,0.037352037,-0.004877474,0.03685224,-0.047624316,-0.06424214,-0.046073787,-0.026882265,0.013492647,0.039761316,0.052444514,0.011019757,0.025023049,0.091804236,-0.004066692,-0.056208845,-0.082814395,0.08561309,0.026700832,-0.07955494,-0.010746734,-0.015411847,0.0042085983,0.078318015,-0.011900348,0.0070027458,-0.006766154,0.027131757,0.043844398,-0.0027868296,-0.009658206,0.010040959,-0.023547761,-0.029567933,-0.009213305,0.08075687,-0.010299143,-0.043904904,-0.047662992,-0.05209986,-0.013318133,-0.038787957,0.014890588,-0.039321233,0.023004241,-0.05030088,0.0034430968,-0.014847813,-0.025622146,-0.0033122527,-0.029930536,-0.0384656,-0.019115653,0.0851995,0.02849658,0.013169585,0.027330065,-0.08025229,0.064758666,0.03805743,0.0009525464,-0.05592855,-0.038121253,-0.027514068,-0.021572407,0.000809008,0.029603163,-0.05583009,-5.6142284e-08,-0.044128444,-0.01480825,0.07061912,-0.053401884,0.1080995,0.042755224,-0.07349734,0.010746004,-0.017974928,-0.117838144,0.045324136,0.044659518,-0.02605117,0.018113535,0.0062125386,0.0064742337,0.011736467,-0.08103688,-0.037035123,-0.028561054,-0.027244817,-0.015298316,-0.06591322,0.022725789,0.036201198,0.0025965215,0.031389095,0.047299277,-0.004070079,0.06604816,-0.03717433,0.0020000106,0.06943895,0.022847125,0.07658744,-0.019659426,0.09689313,0.017856982,-0.06752939,-0.08398928,-0.013238563,0.039591946,0.0006348126,-0.015335578,0.04963212,-0.03671929,-0.005266992,-0.09187776,-0.06718927,0.019453142,-0.0323742,0.023232898,-0.07408605,0.03396014,0.052092362,-0.008445728,0.0024356064,-0.09946521,-0.014323973,0.009580883,-0.030472971,0.13051464,0.039547954,0.05063998]'::public.vector,'Exact and Approximate Problem Solving - Approximation: Example: Integration problem. Exact: Example: gcd(a,b). 4.Algorithm Design Techniques (Strategy or Paradigm) An algorithm design technique is a general approach to solving problems algorithmically that is applicable to a variety of problems from different areas of computing. The main concern in this course ts to learn the different techniques to design algovithms. 5S. Designing an Algovithm and Data Structures - Some Designing techniques can be inapplicable to the problem in question. - Some problems require several designing techniques that need to be combined. Both points above ave controlled by the data structure of the problem. 6. Methods of Specifying an Algovithm e Use words and natural language to specify the steps of the algorithm. e Use pseudocodes which is a mixture of natural language and programing language. e Use flowcharts and diagrams. 7. Proving an Algovithw’s Correctness e Make sure that the algorithm you designed and specified yields the required result for every legitimate input. e For proving techniques, we mostly use Mathematical induction. Because the iterations of the algorithm provide a natural sequence of steps. e Proving the correctness of approximation algorithm is less straightforward, we usually show that the evvor the',3);
INSERT INTO public.embeddings (document_id,embedding,chunk_text,chunk_index) VALUES
	 (16,'[-0.02135132,0.14437124,-0.048497304,-0.021563124,-0.026866993,-0.1374069,-0.042746585,0.035313487,-0.006829792,0.07786647,-0.05631379,-0.047735147,0.06747463,-0.026099268,-0.0749112,0.015750537,-0.029348072,0.02550065,-0.0042845276,-0.1180086,0.039181452,-0.07658665,-0.013659538,0.011709216,0.028876558,0.036860533,-0.061900295,0.009271236,0.061955977,0.02527297,0.013602237,0.002382126,0.08126542,-0.040602587,-0.0046371818,0.071254306,-0.0059305215,-0.044603262,-0.057966642,0.07078482,-0.08722091,-0.022551,0.026945448,0.0013262456,0.019490743,0.038107257,-0.085044995,0.048010446,-0.08591174,-0.008770173,-0.11833371,-0.00504556,-0.039075773,-0.030705458,-0.062089745,-0.10128893,0.02583702,0.03638105,0.006433623,-0.063021235,0.03194036,0.012552788,-0.0045596287,0.038621318,0.057226226,-0.022433955,0.037789434,-0.050908912,-0.059727766,0.038265858,0.0025564376,0.014258697,-0.029504785,0.07078309,0.057792183,-0.03789623,0.04366702,0.0073751733,0.00074623886,0.03524713,-0.008937952,0.021040747,-0.058090393,-0.021065904,0.01975054,-0.021372404,-0.04591885,0.02705838,0.021151213,-0.035645835,0.036102958,-0.101757795,-0.07417177,0.0009785531,0.16756502,0.021040626,-0.021616207,0.037854362,-0.016459562,0.040015373,0.002475459,-0.017852217,0.026486857,-0.13764252,0.087233685,0.049532305,0.081440434,0.07615093,0.082150444,-0.09068199,0.032783557,0.036480743,0.01663799,0.12120493,0.031168876,0.02556107,-0.03252086,0.014153458,-0.04100969,0.06706537,0.017290656,0.042409852,0.05829858,0.0464635,0.050896537,-0.036875583,0.058510896,2.6626473e-33,-0.07340242,-0.039451748,-0.013692982,0.0008856579,0.0032486853,0.0060051293,-0.008834003,0.007876763,0.026638785,0.041439757,0.016054116,0.04558762,0.07059854,0.10612693,0.08051813,0.020938959,0.035089485,-0.08282317,-0.03639805,-0.024599746,0.12198068,-0.12068265,0.043993574,-0.08245872,-0.059176292,0.055791393,0.01236779,-0.07642756,0.016220944,0.01760741,-0.03470197,-0.058175463,-0.08327266,0.058867544,-0.019842543,-0.003964098,0.08476234,-0.09747063,0.021771044,-0.021733345,-0.021221437,-0.018085668,0.075057425,0.06878249,0.0038634792,0.022126317,-0.050119855,0.033062823,-0.009707752,0.05597557,0.012791425,0.03954184,0.007496841,-0.015414222,-0.009321835,0.07085228,-0.051728502,0.012098474,0.023367325,0.124148056,0.020903453,0.013357101,0.0449337,0.022301368,-0.08004411,0.023452828,-0.011678491,-0.0001427408,0.071672,0.016044272,-0.059159365,-0.026300346,-0.030287037,0.037111685,0.043736666,-0.07172214,0.09447063,-0.06265087,-0.059142146,-0.05415925,0.03246004,0.11263254,0.04496203,-0.03736434,0.019519914,-0.09561652,-0.03740003,-0.013776916,0.008919593,-0.049076866,-0.03798559,0.01714059,0.048186846,-0.03607824,0.08283644,-3.8086028e-33,-0.02103616,0.07208602,0.015939109,0.05276602,-0.07286964,-0.084537365,-0.019807398,-0.10834939,0.025118051,-0.0311174,-0.035609394,-0.002405277,-0.02484361,0.046181317,-0.01694003,-0.05923252,-0.032183338,-0.004180217,0.060453754,0.032433722,0.014192917,0.080302835,-0.085403435,-0.05154719,0.029108506,0.0159946,-0.03623364,-0.044157043,0.04102464,0.004382074,0.0059727035,0.007742249,-0.062842995,-0.023193983,-0.00493788,0.0113140885,0.08712398,0.022831196,0.017407628,0.046952035,0.08308399,-0.054667603,-0.0044567003,-0.05446866,0.030902462,0.077302404,-0.048515894,0.014339534,0.05845911,0.025009226,0.08716069,0.009510814,-0.000976721,0.03838861,0.013726965,0.038078025,-0.0029025513,0.007993428,-0.025652084,-0.026201878,-0.07030331,0.018550012,0.026613992,0.041487038,-0.050086785,-0.04176239,-0.0563895,0.037422776,0.05305834,-0.04534969,-0.006101439,0.02380675,-0.07497209,-0.015124104,-0.0030762898,0.062425535,0.00905761,-0.024026971,-0.007075511,-0.041264217,0.031731676,0.023092382,0.029496225,0.0009849207,-0.03768461,-0.0058280104,0.10438264,-0.06350548,-0.10298899,0.013734805,0.037710954,0.0015163273,-0.0063136118,-0.048442964,-0.0029475293,-5.707942e-08,-0.046758544,-0.020255007,0.05270803,-0.061378084,0.054033887,0.046022628,0.0007505783,-0.0439745,-0.048561033,-0.10657392,0.027623259,0.04707271,-0.06419814,0.017753083,0.032267135,0.034903117,-0.018259158,-0.09402142,-0.049631484,0.053199366,0.014733765,-0.019049432,-0.022176905,0.030365245,-0.046255607,-0.026595853,0.0073021064,0.048531387,-0.014364109,0.006811301,0.0062005934,0.044758048,0.011723559,0.012949134,0.025653563,-0.03657255,-0.028613117,0.072071455,-0.010806925,-0.06891819,-0.065730266,0.055849064,0.03756826,-0.06909009,0.05242198,-0.046258844,0.0051505878,-0.084070824,-0.09548944,-0.029411286,-0.0091279475,-0.023523541,0.0015751119,0.011549708,0.048026852,-0.008946275,-0.07555723,-0.10698132,-0.033204842,0.028983919,0.02439664,0.1449718,0.073677205,-0.03338199]'::public.vector,'you designed and specified yields the required result for every legitimate input. e For proving techniques, we mostly use Mathematical induction. Because the iterations of the algorithm provide a natural sequence of steps. e Proving the correctness of approximation algorithm is less straightforward, we usually show that the evvor the algovithm produces does not exceed a certain limit. 8. Analyzing an Algorithm - Efficiency: > Time Efficiency: how fast an algorithm runs. > Space Efficiency: how much memory the algorithm uses. - Simplicity: the simpler the algorithm the better - Generality: > Generality of the problem the algorithm solves. > Generality of the set of inputs the algorithm accepts. 9. Coding an Algovithm ¢ Writing the algorithm in a purely programming language. ° Testing that the program implement the algorithm. Understand the problem Decide on: computational means, exact VS. approximate solving, algorithm design technique Design an algorithm < Prove correctness Analyze the algorithm Code the algorithm Exercises 1.2 1.[Old wovld puzzle] A peasant finds himself on a riverbank with a wolf, a goat, and a head of cabbage. He needs to transport all three to the other side of the river in his boat. However, the boat has room for',4),
	 (16,'[-0.04187921,0.11502492,-0.08787772,-0.017451784,-0.0068638413,-0.03585188,-0.043832704,-0.005547362,-0.08820515,0.010345913,0.06079656,-0.113601245,0.019160273,-0.022646604,-0.100570254,0.052773062,-0.022624342,0.0034642566,0.011665436,-0.03223876,0.024636997,-0.058450457,-0.04994744,-0.003616114,0.070513465,0.022148106,0.0068891286,0.030884976,0.05366588,-0.0020708083,0.014287076,0.055953406,0.10890596,0.014221969,-0.008057019,0.06181475,0.0036613767,-0.01804134,-0.029176908,0.036780808,-0.029646894,-0.0067382324,0.007607663,-0.0043804906,0.05362105,0.010682807,-0.08551144,0.073222436,-0.01092551,-0.038773593,-0.10390991,-0.049006328,-0.0338493,0.02738708,-0.03886003,-0.15944892,0.019571817,-0.06148104,-0.0013136846,-0.09640461,0.057959087,0.058329307,-0.028314324,0.04334751,0.044504244,0.033592034,-0.056823134,-0.004572101,-0.07706492,0.037648957,-0.010825813,-0.06845762,-0.030469162,-0.031047126,-0.033782586,-0.02413638,0.067767955,-0.05970514,0.010685522,0.026063792,-0.026677966,-0.025078868,-0.049295012,0.011431289,2.6478833e-07,-0.0006102352,-0.109069854,-0.0017101804,0.036741324,-0.027523492,0.01690878,-0.08748557,0.021590682,-0.059154134,0.16112837,0.047321856,-0.020358492,0.057120204,-0.018468557,0.074300416,-0.009860748,-0.005525884,-0.018211849,-0.06979547,0.04810089,0.031840615,-0.021966202,0.0568533,0.035150938,-0.07818679,-0.022040077,0.047428545,0.017385593,0.0784068,-0.009419739,0.043989193,0.04647104,-0.04789532,-0.017827692,0.0012033604,0.07725035,0.03519279,0.037151545,0.040924642,0.11340167,-0.030073471,0.0357863,-3.973649e-34,-0.04738067,-0.038654223,-0.034404386,-0.04133345,0.027928002,-0.013889611,-0.0059483633,-0.005547855,-0.022165038,0.07865424,-0.03458583,0.025688015,0.02788343,0.048604038,0.029608825,-0.012069104,0.027761275,-0.08099822,0.034938633,-0.015770769,0.08135951,-0.023048813,0.020326067,-0.03557487,0.03072647,0.030749176,0.063217,-0.17123882,0.06497878,0.045770746,-0.0069450825,-0.00578487,-0.11545412,-0.0024696162,0.010392824,0.021552678,-0.025080955,-0.06607802,-0.03436344,-0.028862922,-0.0015556691,0.01810076,0.09553047,-0.012043801,0.053967334,0.0015148439,-0.08592759,0.060444415,-0.031690914,0.06850675,-0.016229538,0.025038337,-0.0057908986,-0.0013083289,-0.044702485,0.00250607,0.026123831,0.099609904,-0.08659174,0.10153948,0.039960187,0.018781302,0.042426564,-0.0011253109,0.024292847,-0.032511577,-0.07488705,-0.046901047,0.037728533,0.045142293,-0.079703294,-0.014146991,0.033842865,0.0123494705,-0.021297721,-0.03711498,0.06357741,-0.016050933,-0.07775466,-0.11014658,-0.021602564,0.06731162,0.049477413,0.023911607,-0.04286372,-0.010819375,-0.035248503,-0.11543621,0.03940076,-0.06634241,-0.033623535,0.016894681,-0.021666,-0.02440116,0.07857704,-9.057767e-34,-0.07603106,0.0073823747,0.032452747,0.06211834,-0.028783316,-0.095679194,-0.011583323,-0.05227672,0.050109196,-0.03619201,-0.06547036,0.03550551,0.032614198,0.051935036,0.1288145,-0.021259082,0.0034021493,0.045752008,0.004159248,0.024164388,-0.08511557,0.1121682,-0.0020703054,-0.032153703,0.040282417,0.08027765,-0.045137394,-0.017794453,0.011586549,-0.030180013,-0.0019173385,-0.0054758023,-0.023697808,-0.07878642,0.0070652906,0.04566451,-0.0027920092,0.016442798,0.022387985,0.05464654,0.023510823,-0.049503826,-0.072675444,-0.058100905,-0.00027183667,0.07539231,-0.031345874,0.0041955546,0.08062177,0.008526536,0.06740011,0.0014030248,0.0494768,0.028546227,0.0029787396,0.022295367,0.029337874,-0.028499365,0.034776453,-0.041046616,-0.036495395,0.01662735,0.039528426,0.06779575,-0.055322707,-0.008285968,-0.055093706,0.041991398,-0.023414947,-0.058453683,-0.00065078016,0.09021638,-0.017197238,0.014907971,-0.015916215,0.07753853,-0.05108422,-0.035775576,0.010396663,-0.058628518,-0.029470474,0.008465941,0.06704123,0.07629278,0.029898837,-0.08638655,0.078748785,-0.011003431,-0.010036657,-0.053373743,-0.030844804,0.02266585,-0.032844864,0.028564356,0.06052371,-4.7184177e-08,-0.047819603,-0.04495239,-0.02548921,0.026056476,0.07957633,-0.02841405,-0.040313534,-0.10455487,-0.07112913,-0.007814247,0.008862822,0.076712,-0.026285257,0.005466435,-0.030040905,0.03211895,0.008290681,-0.115890004,-0.06406139,0.020490598,0.06575754,-0.04261625,-0.035161093,-0.010075276,0.0032146168,-0.05945088,-0.008852349,0.030454295,0.10357963,0.09238904,-0.001989754,0.07648151,-0.012099886,0.0522929,0.008189874,0.046260674,-0.086784944,0.040447794,0.009644517,-0.030902483,-0.0312446,0.005076149,-0.04375209,-0.043153882,0.097726755,0.0023579134,0.008832074,-0.05564069,0.0106564285,0.016455235,-0.050488196,0.005052831,0.067471445,0.06061584,0.05471955,-0.10949607,-0.02344398,-0.0899956,0.11311344,0.023342462,0.009354376,0.09790787,0.038910173,-0.02101368]'::public.vector,'Analyze the algorithm Code the algorithm Exercises 1.2 1.[Old wovld puzzle] A peasant finds himself on a riverbank with a wolf, a goat, and a head of cabbage. He needs to transport all three to the other side of the river in his boat. However, the boat has room for only the peasant himself and one other item (either the wolf, the goat, ov the cabbage). In his absence, the wolf would eat the goat, and the goat would eat the cabbage. Solve this problem for the peasant or prove it has no solution. (Note: The peasant is a vegetarian but does not like cabbage and hence can eat neither the goat nor the cabbage to help him solve the problem. And it goes without saying that the wolf is a protected species.) 2.Wvite pseudocode for an algovithm for finding veal roots of equation ax*+bx+c=0 for arbitrary veal coefficients a, b, and c. (You may assume that a veal solution exists. 3.Describe the algorithm used by your favorite ATM machine in dispensing cash. (You may give your description in either English or pseudocode, whichever you find more convenient.)',5),
	 (16,'[-0.06328199,0.0748791,-0.07282046,-0.1040534,-0.08628331,-0.06888037,0.102550104,0.019544208,-0.03272647,0.025498439,0.018878995,-0.021582432,0.02912048,-0.014656126,0.015954545,0.021584013,-0.021007197,-0.053294413,0.0026531173,0.037587494,0.07780424,-0.087330304,-0.059877522,0.04189481,0.06543323,0.0872928,0.070755094,0.023390299,0.07144001,-0.055826213,-0.014893275,0.062531285,0.061901923,-0.029511137,-0.014579457,-0.015555309,-0.033417694,0.03206363,-0.038902283,0.03434054,-0.06227471,-0.05102063,0.009010705,-0.012442731,0.061169818,-0.017351933,0.011493527,0.08541975,-0.05290586,-0.035694957,-0.06027433,-0.014744499,-0.10771544,0.019662684,-0.013873973,-0.08560976,0.046468467,-0.0484654,-0.0006385449,-0.05124457,0.01807557,0.07912685,-0.06431183,0.018550077,0.057366643,0.056205828,-0.0010702346,-0.028126843,-0.019451523,0.03780369,-0.028513402,0.019573208,-0.05829361,0.011799964,-0.04039029,-0.045053765,0.07161752,-0.058950186,-0.029418692,-0.010752043,0.017124271,-0.030916132,0.01887364,0.036172617,0.024104116,0.0041271853,-0.10150868,-0.08286483,0.02066056,-0.10852719,-0.008403122,0.038365923,-0.029236099,-0.047758732,0.1471164,0.0653789,-0.021988308,-0.002707779,0.07539292,-0.0051623965,0.040680546,0.036231782,-0.077805616,0.012576193,0.041546945,0.042265136,-0.0011610411,-0.040060256,0.017218087,-0.0776632,-0.017590942,0.027184363,0.052867204,0.0077785198,-0.03611325,0.0016982907,-0.025609085,-2.5640866e-05,-0.041981604,-0.009197849,-0.008690384,0.043637782,0.0010567143,-0.0036141414,-0.037770126,0.010012461,-0.04266368,-4.299874e-34,-0.12001697,-0.006655175,0.04382735,0.00753468,-0.00087089953,0.001286968,-0.03526673,0.0072928783,0.042043395,0.026164565,0.008753915,-0.05585508,0.023500916,0.15065663,0.038902204,-0.06597755,0.09593823,0.025380785,-0.030675251,-0.07310323,0.08010833,0.004283083,-0.03204479,0.012372526,0.03805877,0.012653562,0.0690582,-0.11168731,0.07004243,-0.007989577,0.033475395,-0.010666896,-0.059055325,0.00090313796,-0.016442653,0.05790706,0.007248935,0.007502445,0.016697956,-0.11147232,0.0037809778,0.008409539,-0.020238234,0.011769182,0.048790116,0.025459431,-0.05197726,0.034378868,0.04378373,0.010109308,0.014185935,0.011252696,-0.03269753,0.003979152,0.032898627,-0.056062445,0.010468495,-0.008250175,-0.05357365,0.090973936,-0.016794484,-0.013879314,-0.044323877,0.019265259,-0.048584737,0.030970816,-0.040893663,-0.06095297,0.07414008,0.06709207,-0.08607295,0.035847507,0.021861074,0.059766717,-0.0024887566,-0.010481977,0.015763894,0.032891978,-0.030281223,-0.07533865,-0.07112443,0.07236284,-0.041781,0.04566424,0.024066443,-0.0038387517,-0.024379002,-0.100302204,0.0057172957,-0.0246927,-0.021576174,0.0009295586,0.006939622,0.042360816,0.017695421,-2.64924e-33,-0.029668687,0.06504546,-0.012327517,0.1166316,0.0017446594,-0.032729644,0.023060849,-0.11936402,0.12896869,-0.0036914158,-0.058323104,-0.024145706,0.017570548,-0.0015665866,0.0039324434,-0.019780574,-0.060752183,-0.032447,-0.032820508,0.12481343,-0.06349421,0.06591076,0.05306248,-0.018369868,0.08150453,0.044779282,-0.097669676,0.010490666,0.021316558,0.011501508,-0.02552439,-0.02136927,0.043931454,-0.058203965,-0.025504926,0.006122882,0.056144446,-0.04636859,0.015095964,-0.009072334,0.0124975685,-0.019910725,-0.01026803,0.040942315,0.0075140055,-0.02844267,-0.08567426,-0.0155910095,0.044377163,-0.041735902,-0.008479752,-0.052263856,0.04650773,0.0534655,-0.014183884,0.11050664,0.029149814,0.014464655,0.08130996,0.055526305,-0.042925086,-0.031061515,0.061635353,0.03200612,-0.024636084,-0.050094076,0.008379437,0.081056446,-0.041313197,-0.09730869,0.041007776,0.09389185,0.04785189,0.017419443,-0.023874681,0.05981791,-0.016797619,-0.06535507,-0.018863464,-0.038570903,-0.06428438,0.006463773,-0.022103563,0.024745101,-0.118392885,0.011578857,0.08676139,-0.16679682,0.0025846492,-0.040778324,-0.040281065,0.017200358,0.017688522,-0.01927216,-0.010400266,-3.7893848e-08,-0.061106004,-0.058073245,0.08353105,-0.010409726,0.075844064,0.026628727,-0.026400782,0.026022715,-0.04579778,-0.11253318,0.019653391,0.044516623,-0.06943155,0.022843264,-0.046617568,-0.017186128,-0.0701489,-0.09181944,-0.02738778,-0.028351733,0.0661178,0.018392175,-0.014341845,0.022875072,-0.010533897,-0.028984325,0.02144515,0.044923507,0.06492706,0.04628771,0.004781266,0.031109625,0.059676792,0.03027648,-0.011729495,-0.017025746,0.040638197,0.022951312,-0.03277989,0.01512339,0.058404233,-0.035105385,-0.12408039,-0.08000714,0.07425971,-0.049905434,-0.07883171,-0.041946575,-0.026573649,-0.067383274,-0.062182885,-0.026200926,0.11393332,0.05175773,0.076481,-0.021486994,-0.06707372,0.0084830485,0.11429604,0.0020109594,0.0574614,0.10483897,-0.01905744,0.0021798688]'::public.vector,'b, and c. (You may assume that a veal solution exists. 3.Describe the algorithm used by your favorite ATM machine in dispensing cash. (You may give your description in either English or pseudocode, whichever you find more convenient.)',6);
